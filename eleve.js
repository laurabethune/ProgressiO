console.log("Chargement du script eleve.js...");

// R√©cup√©ration du nom de l'√©l√®ve dans l'URL
const urlParams = new URLSearchParams(window.location.search);
const studentName = urlParams.get('name'); 

console.log("Nom de l'√©l√®ve s√©lectionn√© :", studentName);

// V√©rifier si un nom d'√©l√®ve a √©t√© trouv√©
if (!studentName) {
    console.error("‚ùå Aucun √©l√®ve trouv√© dans l'URL !");
} else {
    console.log("‚úÖ √âl√®ve d√©tect√© :", studentName);
}

// API Google Sheets
const apiURL = "https://docs.google.com/spreadsheets/d/1chnPStz0_dv50b2PRRRwsYzJXVJwPoAvhrtnpYa5vMg/gviz/tq?tqx=out:json";
console.log("API URL :", apiURL);

fetch(apiURL)
    .then(response => response.text())
    .then(data => {
        // Nettoyage des donn√©es pour extraire uniquement le JSON
        const jsonData = JSON.parse(data.substring(47, data.length - 2));

        // R√©cup√©ration des lignes du tableau
        const rows = jsonData.table.rows;

        // Recherche des comp√©tences de l'√©l√®ve
        let studentFound = false;
        let studentDataDiv = document.getElementById("student-data");
        let studentNameHeader = document.getElementById("student-name");

        studentNameHeader.innerText = studentName;

        rows.forEach(row => {
            let name = row.c[0]?.v;
            if (name === studentName) {
                studentFound = true;
                let competence1 = row.c[1]?.v || "Non renseign√©";
                let competence2 = row.c[2]?.v || "Non renseign√©";
                let competence3 = row.c[3]?.v || "Non renseign√©";
                let badges = row.c[4]?.v || "Aucun badge";

                // Conversion des niveaux
                const levelMapping = {
                    "‚úîÔ∏è": "Expert",
                    "‚ùå": "Novice",
                    "üî∏": "D√©brouill√©",
                    "‚≠ê": "Averti"
                };

                competence1 = levelMapping[competence1] || competence1;
                competence2 = levelMapping[competence2] || competence2;
                competence3 = levelMapping[competence3] || competence3;

                // Affichage des comp√©tences
                studentDataDiv.innerHTML = `
                    <ul>
                        <li><strong>Comp√©tence 1 :</strong> ${competence1}</li>
                        <li><strong>Comp√©tence 2 :</strong> ${competence2}</li>
                        <li><strong>Comp√©tence 3 :</strong> ${competence3}</li>
                        <li><strong>Badges :</strong> ${badges}</li>
                    </ul>
                `;
            }
        });

        if (!studentFound) {
            studentDataDiv.innerHTML = `<p>‚ö†Ô∏è Aucun √©l√®ve trouv√© avec ce nom.</p>`;
        }
    })
    .catch(error => {
        console.error("Erreur lors du chargement des donn√©es :", error);
        document.getElementById("student-data").innerHTML = `<p>‚ö†Ô∏è Impossible de charger les donn√©es.</p>`;
    });
