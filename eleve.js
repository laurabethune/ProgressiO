console.log("üìÑ Chargement du script eleve.js...");

// üîπ R√©cup√©ration du nom de l'√©l√®ve depuis l'URL
const urlParams = new URLSearchParams(window.location.search);
const studentName = urlParams.get('name');

console.log("üë§ Nom de l'√©l√®ve s√©lectionn√© :", studentName);

// V√©rifier si un nom d'√©l√®ve a bien √©t√© trouv√©
if (!studentName) {
    console.error("‚ùå Aucun √©l√®ve trouv√© dans l'URL !");
} else {
    console.log("‚úÖ √âl√®ve d√©tect√© :", studentName);
}

// üîπ URL de l'API Google Sheets (remplace avec ton propre ID de fichier)
const spreadsheetID = "1chnPStz0_dv50b2PRRRwsYzJXVJwPoAvhrtnpYa5vMg";
const sheetName = "Comp√©tences";  // Remplace par le nom exact de ta feuille
const apiURL = `https://docs.google.com/spreadsheets/d/${spreadsheetID}/gviz/tq?tqx=out:json&sheet=${sheetName}`;

console.log("üåç API URL :", apiURL);

// üîπ R√©cup√©ration des donn√©es depuis Google Sheets
fetch(apiURL)
    .then(response => response.text())
    .then(data => {
        console.log("‚úÖ V√©rification : eleve.js est bien charg√© !");
        
        // Nettoyage de la r√©ponse pour r√©cup√©rer le JSON
        const jsonData = JSON.parse(data.substring(47, data.length - 2));
        const rows = jsonData.table.rows;

        console.log("üìä Donn√©es brutes re√ßues :", rows);

        // V√©rifier si les donn√©es existent
        if (!rows || rows.length === 0) {
            console.warn("‚ö†Ô∏è Aucune donn√©e trouv√©e dans la feuille !");
            document.getElementById("student-data").innerHTML = "<p>‚ö†Ô∏è Impossible de charger les donn√©es.</p>";
            return;
        }

        // üîπ D√©tection des colonnes
        const headers = jsonData.table.cols.map(col => col.label);
        console.log("üìä Colonnes d√©tect√©es :", headers);

        // Trouver l'index de l'√©l√®ve dans les colonnes
        const studentIndex = headers.indexOf(studentName);
        if (studentIndex === -1) {
            console.warn(`‚ö†Ô∏è Aucun √©l√®ve trouv√© avec ce nom : ${studentName}`);
            document.getElementById("student-data").innerHTML = `<p>‚ö†Ô∏è Aucun √©l√®ve trouv√© avec ce nom : <strong>${studentName}</strong>.</p>`;
            return;
        }

        // üîπ Cr√©ation du tableau des comp√©tences
        let tableHTML = `<table border="1">
                            <tr>
                                <th>Comp√©tence</th>
                                <th>Niveau</th>
                            </tr>`;

        // Lire les donn√©es et ajouter au tableau
        rows.forEach(row => {
            const competence = row.c[0]?.v || "Inconnue";  // Colonne 1 : Comp√©tence
            const niveau = row.c[studentIndex]?.v || "Non √©valu√©";  // Colonne de l'√©l√®ve
            
            tableHTML += `<tr>
                            <td>${competence}</td>
                            <td>${niveau}</td>
                          </tr>`;
        });

        tableHTML += "</table>";
        document.getElementById("student-data").innerHTML = tableHTML;

        console.log("‚úÖ Affichage des comp√©tences termin√© !");
    })
    .catch(error => {
        console.error("‚ùå Erreur lors du chargement des donn√©es :", error);
        document.getElementById("student-data").innerHTML = "<p>‚ö†Ô∏è Impossible de charger les donn√©es.</p>";
    });
