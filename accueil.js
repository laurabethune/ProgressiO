console.log("üöÄ Chargement du script accueil.js...");

// URL de l'API Google Sheets
const apiURL = "https://docs.google.com/spreadsheets/d/1chnPStz0_dv50b2PRRRwsYzJXVJwPoAvhrtnpYa5vMg/gviz/tq?tqx=out:json";

console.log("üåê API URL :", apiURL);

fetch(apiURL)
    .then(response => response.text())
    .then(dataText => {
        const jsonData = JSON.parse(dataText.substring(47).slice(0, -2)); // Nettoyage du JSON Google Sheets

        console.log("üõ†Ô∏è Donn√©es JSON brutes :", jsonData);

        if (!jsonData.table.cols || jsonData.table.cols.length === 0) {
            console.warn("‚ö†Ô∏è Aucune donn√©e trouv√©e dans la feuille !");
            document.getElementById("student-list").innerHTML = "<p>‚ö†Ô∏è Aucun √©l√®ve trouv√© !</p>";
            return;
        }

        // Extraction des en-t√™tes (les noms des √©l√®ves sont √† partir de la colonne 2)
        const headers = jsonData.table.cols.map(col => col.label.trim());
        console.log("üìä En-t√™tes r√©cup√©r√©es :", headers);

        // G√©n√©rer la liste des √©l√®ves (en ignorant la premi√®re colonne qui est "Comp√©tence")
        let studentListHTML = "<ul>";
        for (let i = 1; i < headers.length; i++) { // Commence √† 1 pour ignorer "Comp√©tence"
            if (headers[i]) { // V√©rifie que le nom de l'√©l√®ve existe
                studentListHTML += `<li><a href="eleve.html?name=${encodeURIComponent(headers[i])}">${headers[i]}</a></li>`;
            }
        }
        studentListHTML += "</ul>";

        document.getElementById("student-list").innerHTML = studentListHTML;
    })
    .catch(error => {
        console.error("‚ùå Erreur lors de la r√©cup√©ration des donn√©es :", error);
        document.getElementById("student-list").innerHTML = "<p>‚ùå Erreur lors du chargement des √©l√®ves.</p>";
    });
